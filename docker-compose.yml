services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: document-lake-es
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
      - xpack.ml.enabled=true
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - docnet
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Qdrant - Local vector database for RAG
  # Provides enterprise-grade vector search while maintaining privacy
  qdrant:
    image: qdrant/qdrant:v1.7.4
    container_name: document-lake-qdrant
    ports:
      - "6333:6333"  # HTTP API
      - "6334:6334"  # gRPC API (optional)
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
      # Disable telemetry for privacy
      - QDRANT__TELEMETRY_DISABLED=true
    networks:
      - docnet
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:6333/collections || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s
    restart: unless-stopped

  api:
    image: anbrme/document-lake-api:latest  # Pull from Docker Hub - auto-updates to latest
    container_name: document-lake-api
    ports:
      - "5001:5000"
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - LOCAL_MODEL=sentence-transformers/all-MiniLM-L6-v2
      - CHUNK_SIZE=512
      - CHUNK_OVERLAP=50
      # Auto-update configuration (uses separate public repo for version checking)
      - UPDATE_CHECK_URL=https://raw.githubusercontent.com/anbrme/document-lake-releases/main/VERSION
      - DOCKER_COMPOSE_PATH=/document-lake/docker-compose.yml
    volumes:
      - model_cache:/root/.cache/huggingface
      - uploads:/app/uploads
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - docnet
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  es_data:
    driver: local
  model_cache:
    driver: local
  uploads:
    driver: local
  qdrant_data:
    driver: local

networks:
  docnet:
    driver: bridge
